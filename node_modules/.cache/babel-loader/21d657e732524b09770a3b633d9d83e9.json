{"remainingRequest":"H:\\Projects\\filemanageronline\\node_modules\\babel-loader\\lib\\index.js!H:\\Projects\\filemanageronline\\node_modules\\eslint-loader\\index.js??ref--13-0!H:\\Projects\\filemanageronline\\store\\manager.js","dependencies":[{"path":"H:\\Projects\\filemanageronline\\store\\manager.js","mtime":1561120150415},{"path":"H:\\Projects\\filemanageronline\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"H:\\Projects\\filemanageronline\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"H:\\Projects\\filemanageronline\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"H:\\\\Projects\\\\filemanageronline\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport { BASE_URL_UploadFile } from '@/plugins/common.js';\nimport { BASE_URL } from '@/plugins/common.js';\nexport default {\n  state: {\n    token: {\n      filesPath: ''\n    }\n  },\n  mutations: {\n    FilesPath: function FilesPath(state, payload) {\n      state.filesPath = payload;\n    }\n  },\n  actions: {\n    GetFilesPath: function () {\n      var _GetFilesPath = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee(state) {\n        var result;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return BASE_URL.post('FileManager/GetFilesPath');\n\n              case 2:\n                result = _context.sent;\n                _context.next = 5;\n                return state.commit('filesPath', result.data);\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function GetFilesPath(_x) {\n        return _GetFilesPath.apply(this, arguments);\n      }\n\n      return GetFilesPath;\n    }(),\n    getUserToken: function () {\n      var _getUserToken = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2(state, user) {\n        var result;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return BASE_URL_UploadFile.post('user/Authorization', user);\n\n              case 2:\n                result = _context2.sent;\n                _context2.next = 5;\n                return state.commit('TokenSave', result.data);\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function getUserToken(_x2, _x3) {\n        return _getUserToken.apply(this, arguments);\n      }\n\n      return getUserToken;\n    }()\n  },\n  getters: {\n    getFilesPath: function getFilesPath(state) {\n      return state.filesPath;\n    }\n  }\n};",{"version":3,"sources":["H:\\Projects\\filemanageronline\\store\\manager.js"],"names":["BASE_URL_UploadFile","BASE_URL","state","token","filesPath","mutations","FilesPath","payload","actions","GetFilesPath","post","result","commit","data","getUserToken","user","getters","getFilesPath"],"mappings":";;AAAA,SAASA,mBAAT,QAAoC,qBAApC;AACA,SAASC,QAAT,QAAyB,qBAAzB;AAEA,eAAe;AACXC,EAAAA,KAAK,EAAE;AACHC,IAAAA,KAAK,EAAC;AACFC,MAAAA,SAAS,EAAE;AADT;AADH,GADI;AAMXC,EAAAA,SAAS,EAAE;AACPC,IAAAA,SADO,qBACIJ,KADJ,EACWK,OADX,EACoB;AACvBL,MAAAA,KAAK,CAACE,SAAN,GAAkBG,OAAlB;AACD;AAHI,GANA;AAWXC,EAAAA,OAAO,EAAE;AACCC,IAAAA,YADD;AAAA;AAAA;AAAA,+CACcP,KADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEmBD,QAAQ,CAACS,IAAT,CAAc,0BAAd,CAFnB;;AAAA;AAEIC,gBAAAA,MAFJ;AAAA;AAAA,uBAGIT,KAAK,CAACU,MAAN,CAAa,WAAb,EAA0BD,MAAM,CAACE,IAAjC,CAHJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAKCC,IAAAA,YALD;AAAA;AAAA;AAAA,gDAKcZ,KALd,EAKqBa,IALrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAMoBf,mBAAmB,CAACU,IAApB,CAAyB,oBAAzB,EAA+CK,IAA/C,CANpB;;AAAA;AAMKJ,gBAAAA,MANL;AAAA;AAAA,uBAOKT,KAAK,CAACU,MAAN,CAAa,WAAb,EAA0BD,MAAM,CAACE,IAAjC,CAPL;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,GAXE;AAqBXG,EAAAA,OAAO,EAAE;AACLC,IAAAA,YADK,wBACQf,KADR,EACe;AAChB,aAAOA,KAAK,CAACE,SAAb;AACH;AAHI;AArBE,CAAf","sourcesContent":["import { BASE_URL_UploadFile } from '@/plugins/common.js'\r\nimport { BASE_URL } from '@/plugins/common.js'\r\n\r\nexport default {\r\n    state: {\r\n        token:{\r\n            filesPath: '',\r\n        },\r\n    },\r\n    mutations: {\r\n        FilesPath (state, payload) {\r\n            state.filesPath = payload\r\n          },\r\n    },\r\n    actions: {\r\n        async GetFilesPath(state) {\r\n           const result = await BASE_URL.post('FileManager/GetFilesPath')\r\n           await state.commit('filesPath', result.data)\r\n        },\r\n        async getUserToken(state, user) {\r\n            const result = await BASE_URL_UploadFile.post('user/Authorization', user)\r\n            await state.commit('TokenSave', result.data)\r\n         }\r\n    },\r\n    getters: {\r\n        getFilesPath(state) {\r\n            return state.filesPath\r\n        },\r\n    }\r\n}"]}]}