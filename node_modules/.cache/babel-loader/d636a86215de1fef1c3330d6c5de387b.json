{"remainingRequest":"H:\\Projects\\filemanageronline\\node_modules\\babel-loader\\lib\\index.js!H:\\Projects\\filemanageronline\\node_modules\\eslint-loader\\index.js??ref--13-0!H:\\Projects\\filemanageronline\\src\\store\\manager.js","dependencies":[{"path":"H:\\Projects\\filemanageronline\\src\\store\\manager.js","mtime":1561298189983},{"path":"H:\\Projects\\filemanageronline\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"H:\\Projects\\filemanageronline\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"H:\\Projects\\filemanageronline\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"H:\\\\Projects\\\\filemanageronline\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport { BASE_URL_UploadFile } from '@/plugins/common.js';\nimport { BASE_URL } from '@/plugins/common.js';\nexport default {\n  state: {\n    filesPath: '',\n    filesInfo: []\n  },\n  mutations: {\n    setFilesPath: function setFilesPath(state, payload) {\n      state.filesPath = payload;\n    },\n    setFilesInfo: function setFilesInfo(state, payload) {\n      state.filesInfo = payload;\n    }\n  },\n  actions: {\n    GetFilesPath: function () {\n      var _GetFilesPath = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee(state) {\n        var result;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return BASE_URL.get('FileManager/GetFilesPath');\n\n              case 2:\n                result = _context.sent;\n                _context.next = 5;\n                return state.commit('setFilesPath', result.data);\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function GetFilesPath(_x) {\n        return _GetFilesPath.apply(this, arguments);\n      }\n\n      return GetFilesPath;\n    }(),\n    GetFilesInfo: function () {\n      var _GetFilesInfo = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2(state) {\n        var result;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return BASE_URL.get('FileManager/GetFilesInfo');\n\n              case 2:\n                result = _context2.sent;\n                _context2.next = 5;\n                return state.commit('setFilesInfo', result.data);\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function GetFilesInfo(_x2) {\n        return _GetFilesInfo.apply(this, arguments);\n      }\n\n      return GetFilesInfo;\n    }(),\n    UploadFile: function () {\n      var _UploadFile = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee3(state, file) {\n        var result;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return BASE_URL.post('FileManager/UploadFile', file);\n\n              case 2:\n                _context3.next = 4;\n                return BASE_URL.get('FileManager/GetFilesInfo');\n\n              case 4:\n                result = _context3.sent;\n                _context3.next = 7;\n                return state.commit('setFilesInfo', result.data);\n\n              case 7:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function UploadFile(_x3, _x4) {\n        return _UploadFile.apply(this, arguments);\n      }\n\n      return UploadFile;\n    }(),\n    DeleteFile: function () {\n      var _DeleteFile = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee4(state, file) {\n        var result;\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return BASE_URL_UploadFile.delete('FileManager/DeleteFile?file=' + file);\n\n              case 2:\n                _context4.next = 4;\n                return BASE_URL.get('FileManager/GetFilesInfo');\n\n              case 4:\n                result = _context4.sent;\n                _context4.next = 7;\n                return state.commit('setFilesInfo', result.data);\n\n              case 7:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      function DeleteFile(_x5, _x6) {\n        return _DeleteFile.apply(this, arguments);\n      }\n\n      return DeleteFile;\n    }()\n  },\n  getters: {\n    getFilesPath: function getFilesPath(state) {\n      return state.filesPath;\n    },\n    getFilesInfo: function getFilesInfo(state) {\n      return state.filesInfo;\n    }\n  }\n};",{"version":3,"sources":["H:\\Projects\\filemanageronline\\src\\store\\manager.js"],"names":["BASE_URL_UploadFile","BASE_URL","state","filesPath","filesInfo","mutations","setFilesPath","payload","setFilesInfo","actions","GetFilesPath","get","result","commit","data","GetFilesInfo","UploadFile","file","post","DeleteFile","delete","getters","getFilesPath","getFilesInfo"],"mappings":";;AAAA,SAASA,mBAAT,QAAoC,qBAApC;AACA,SAASC,QAAT,QAAyB,qBAAzB;AAEA,eAAe;AACXC,EAAAA,KAAK,EAAE;AACHC,IAAAA,SAAS,EAAE,EADR;AAEHC,IAAAA,SAAS,EAAE;AAFR,GADI;AAKXC,EAAAA,SAAS,EAAE;AACPC,IAAAA,YADO,wBACMJ,KADN,EACaK,OADb,EACsB;AACzBL,MAAAA,KAAK,CAACC,SAAN,GAAkBI,OAAlB;AACH,KAHM;AAIPC,IAAAA,YAJO,wBAIMN,KAJN,EAIaK,OAJb,EAIsB;AACzBL,MAAAA,KAAK,CAACE,SAAN,GAAkBG,OAAlB;AACH;AANM,GALA;AAaXE,EAAAA,OAAO,EAAE;AACCC,IAAAA,YADD;AAAA;AAAA;AAAA,+CACcR,KADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEoBD,QAAQ,CAACU,GAAT,CAAa,0BAAb,CAFpB;;AAAA;AAEKC,gBAAAA,MAFL;AAAA;AAAA,uBAGKV,KAAK,CAACW,MAAN,CAAa,cAAb,EAA6BD,MAAM,CAACE,IAApC,CAHL;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAKCC,IAAAA,YALD;AAAA;AAAA;AAAA,gDAKcb,KALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAMoBD,QAAQ,CAACU,GAAT,CAAa,0BAAb,CANpB;;AAAA;AAMKC,gBAAAA,MANL;AAAA;AAAA,uBAOKV,KAAK,CAACW,MAAN,CAAa,cAAb,EAA6BD,MAAM,CAACE,IAApC,CAPL;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AASCE,IAAAA,UATD;AAAA;AAAA;AAAA,gDASYd,KATZ,EASmBe,IATnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAUKhB,QAAQ,CAACiB,IAAT,CAAc,wBAAd,EAAwCD,IAAxC,CAVL;;AAAA;AAAA;AAAA,uBAWoBhB,QAAQ,CAACU,GAAT,CAAa,0BAAb,CAXpB;;AAAA;AAWKC,gBAAAA,MAXL;AAAA;AAAA,uBAYKV,KAAK,CAACW,MAAN,CAAa,cAAb,EAA6BD,MAAM,CAACE,IAApC,CAZL;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAcCK,IAAAA,UAdD;AAAA;AAAA;AAAA,gDAcYjB,KAdZ,EAcmBe,IAdnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAeKjB,mBAAmB,CAACoB,MAApB,CAA2B,iCAAiCH,IAA5D,CAfL;;AAAA;AAAA;AAAA,uBAgBoBhB,QAAQ,CAACU,GAAT,CAAa,0BAAb,CAhBpB;;AAAA;AAgBKC,gBAAAA,MAhBL;AAAA;AAAA,uBAiBKV,KAAK,CAACW,MAAN,CAAa,cAAb,EAA6BD,MAAM,CAACE,IAApC,CAjBL;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,GAbE;AAiCXO,EAAAA,OAAO,EAAE;AACLC,IAAAA,YADK,wBACQpB,KADR,EACe;AAChB,aAAOA,KAAK,CAACC,SAAb;AACH,KAHI;AAILoB,IAAAA,YAJK,wBAIQrB,KAJR,EAIe;AAChB,aAAOA,KAAK,CAACE,SAAb;AACH;AANI;AAjCE,CAAf","sourcesContent":["import { BASE_URL_UploadFile } from '@/plugins/common.js'\r\nimport { BASE_URL } from '@/plugins/common.js'\r\n\r\nexport default {\r\n    state: {\r\n        filesPath: '',\r\n        filesInfo: [],\r\n    },\r\n    mutations: {\r\n        setFilesPath(state, payload) {\r\n            state.filesPath = payload\r\n        },\r\n        setFilesInfo(state, payload) {\r\n            state.filesInfo = payload\r\n        },\r\n    },\r\n    actions: {\r\n        async GetFilesPath(state) {\r\n            const result = await BASE_URL.get('FileManager/GetFilesPath')\r\n            await state.commit('setFilesPath', result.data)\r\n        },\r\n        async GetFilesInfo(state) {\r\n            const result = await BASE_URL.get('FileManager/GetFilesInfo')\r\n            await state.commit('setFilesInfo', result.data)\r\n        },\r\n        async UploadFile(state, file) {\r\n            await BASE_URL.post('FileManager/UploadFile', file)\r\n            const result = await BASE_URL.get('FileManager/GetFilesInfo')\r\n            await state.commit('setFilesInfo', result.data)\r\n        },\r\n        async DeleteFile(state, file) {\r\n            await BASE_URL_UploadFile.delete('FileManager/DeleteFile?file=' + file)\r\n            const result = await BASE_URL.get('FileManager/GetFilesInfo')\r\n            await state.commit('setFilesInfo', result.data)\r\n        },\r\n    },\r\n    getters: {\r\n        getFilesPath(state) {\r\n            return state.filesPath\r\n        },\r\n        getFilesInfo(state) {\r\n            return state.filesInfo\r\n        },\r\n    }\r\n}"]}]}