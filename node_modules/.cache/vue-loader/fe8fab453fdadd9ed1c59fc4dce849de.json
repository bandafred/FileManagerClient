{"remainingRequest":"H:\\Projects\\filemanageronline\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!H:\\Projects\\filemanageronline\\src\\components\\HelloWorld.vue?vue&type=script&lang=js&","dependencies":[{"path":"H:\\Projects\\filemanageronline\\src\\components\\HelloWorld.vue","mtime":1561118680590},{"path":"H:\\Projects\\filemanageronline\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"H:\\Projects\\filemanageronline\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"H:\\Projects\\filemanageronline\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1549812933000},{"path":"H:\\Projects\\filemanageronline\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"H:\\Projects\\filemanageronline\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  data: () => ({\n    dialog: false,\n    headers: [\n      { text: \"Имя файла\", value: \"calories\" },\n      { text: \"Размер\", value: \"size\" },\n      { text: \"Дата модификации\", value: \"modificationDate\" }\n    ]\n  }),\n\n  computed: {\n    formTitle() {\n      return this.editedIndex === -1 ? \"New Item\" : \"Edit Item\";\n    }\n  },\n\n  watch: {\n    dialog(val) {\n      val || this.close();\n    }\n  },\n\n  created() {\n    this.initialize();\n  },\n\n  methods: {\n    uploadFiles() {\n      this.$refs.file.click();\n    },\n    async submitFile() {\n      this.file = this.$refs.file.files[0];\n      let formData = new FormData();\n      formData.append(\"file\", this.file);\n      this.progress = true;\n\n      await this.$store.dispatch(\"UploadSotridnikTemporalyMo\", formData);\n      if (this.getSotridnikTemporalyMo.Status != 200) {\n        this.$store.dispatch(\n          \"ErrorMessage\",\n          this.getSotridnikTemporalyMo.Errors\n        );\n      }\n      if (this.getSotridnikTemporalyMo.Status == 200) {\n        //Сохранить распарсенный список\n        let model = {};\n        model.List = this.getSotridnikTemporalyMo.Result;\n        model.Emploeyer = this.nameEmployer;\n        model.Unit = this.selectedUnit ? this.selectedUnit : null;\n        model.IsHome = this.isHome;\n        model.DateStart = this.DateStart;\n        model.DateEnd = this.DateEnd;\n        model.Description = this.Description;\n        model.EmployerId = this.employerId;\n\n        await this.$store.dispatch(\"AddListSotridnikTemporalyMo\", model);\n\n        //Обновить список\n        await this.refresh();\n      }\n      this.progress = false;\n    },\n    initialize() {\n      this.desserts = [\n        {\n          name: \"Frozen Yogurt\",\n          calories: 159,\n          fat: 6.0,\n          carbs: 24,\n          protein: 4.0\n        },\n        {\n          name: \"Ice cream sandwich\",\n          calories: 237,\n          fat: 9.0,\n          carbs: 37,\n          protein: 4.3\n        },\n        {\n          name: \"Eclair\",\n          calories: 262,\n          fat: 16.0,\n          carbs: 23,\n          protein: 6.0\n        },\n        {\n          name: \"Cupcake\",\n          calories: 305,\n          fat: 3.7,\n          carbs: 67,\n          protein: 4.3\n        },\n        {\n          name: \"Gingerbread\",\n          calories: 356,\n          fat: 16.0,\n          carbs: 49,\n          protein: 3.9\n        },\n        {\n          name: \"Jelly bean\",\n          calories: 375,\n          fat: 0.0,\n          carbs: 94,\n          protein: 0.0\n        },\n        {\n          name: \"Lollipop\",\n          calories: 392,\n          fat: 0.2,\n          carbs: 98,\n          protein: 0\n        },\n        {\n          name: \"Honeycomb\",\n          calories: 408,\n          fat: 3.2,\n          carbs: 87,\n          protein: 6.5\n        },\n        {\n          name: \"Donut\",\n          calories: 452,\n          fat: 25.0,\n          carbs: 51,\n          protein: 4.9\n        },\n        {\n          name: \"KitKat\",\n          calories: 518,\n          fat: 26.0,\n          carbs: 65,\n          protein: 7\n        }\n      ];\n    },\n\n    editItem(item) {\n      this.editedIndex = this.desserts.indexOf(item);\n      this.editedItem = Object.assign({}, item);\n      this.dialog = true;\n    },\n\n    deleteItem(item) {\n      const index = this.desserts.indexOf(item);\n      confirm(\"Are you sure you want to delete this item?\") &&\n        this.desserts.splice(index, 1);\n    },\n\n    close() {\n      this.dialog = false;\n      setTimeout(() => {\n        this.editedItem = Object.assign({}, this.defaultItem);\n        this.editedIndex = -1;\n      }, 300);\n    },\n\n    save() {\n      if (this.editedIndex > -1) {\n        Object.assign(this.desserts[this.editedIndex], this.editedItem);\n      } else {\n        this.desserts.push(this.editedItem);\n      }\n      this.close();\n    }\n  }\n};\n",{"version":3,"sources":["HelloWorld.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwfile":"HelloWorld.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n    <v-toolbar flat color=\"white\">\n      <v-toolbar-title>Файлы</v-toolbar-title>\n      <v-spacer></v-spacer>\n      <v-text-field v-model=\"search\" append-icon=\"search\" label=\"Поиск\" single-line hide-details></v-text-field>\n    </v-toolbar>\n    <v-data-table :headers=\"headers\" :items=\"desserts\" class=\"elevation-1\">\n      <template v-slot:items=\"props\">\n        <td>{{ props.item.name }}</td>\n        <td class=\"text-xs-left\">{{ props.item.calories }}</td>\n        <td class=\"text-xs-left\">{{ props.item.fat }}</td>\n        <td>\n          <v-tooltip bottom>\n            <v-btn\n              slot=\"activator\"\n              color=\"blue darken-1\"\n              dark\n              fab\n              small\n              @click=\"deleted(props.item)\"\n            >\n              <v-icon>description</v-icon>\n            </v-btn>\n            <span>Просмотр</span>\n          </v-tooltip>\n          <v-tooltip bottom>\n            <v-btn slot=\"activator\" color=\"red\" dark fab small @click=\"deleted(props.item)\">\n              <v-icon>delete_forever</v-icon>\n            </v-btn>\n            <span>Удалить файл</span>\n          </v-tooltip>\n        </td>\n      </template>\n    </v-data-table>\n    <v-btn color=\"info\" @click=\"uploadFiles\">Добавить файл</v-btn>\n    <input style=\"display: none\" type=\"file\" id=\"file\" ref=\"file\" v-on:change=\"submitFile()\">\n  </div>\n</template>\n<script>\nexport default {\n  data: () => ({\n    dialog: false,\n    headers: [\n      { text: \"Имя файла\", value: \"calories\" },\n      { text: \"Размер\", value: \"size\" },\n      { text: \"Дата модификации\", value: \"modificationDate\" }\n    ]\n  }),\n\n  computed: {\n    formTitle() {\n      return this.editedIndex === -1 ? \"New Item\" : \"Edit Item\";\n    }\n  },\n\n  watch: {\n    dialog(val) {\n      val || this.close();\n    }\n  },\n\n  created() {\n    this.initialize();\n  },\n\n  methods: {\n    uploadFiles() {\n      this.$refs.file.click();\n    },\n    async submitFile() {\n      this.file = this.$refs.file.files[0];\n      let formData = new FormData();\n      formData.append(\"file\", this.file);\n      this.progress = true;\n\n      await this.$store.dispatch(\"UploadSotridnikTemporalyMo\", formData);\n      if (this.getSotridnikTemporalyMo.Status != 200) {\n        this.$store.dispatch(\n          \"ErrorMessage\",\n          this.getSotridnikTemporalyMo.Errors\n        );\n      }\n      if (this.getSotridnikTemporalyMo.Status == 200) {\n        //Сохранить распарсенный список\n        let model = {};\n        model.List = this.getSotridnikTemporalyMo.Result;\n        model.Emploeyer = this.nameEmployer;\n        model.Unit = this.selectedUnit ? this.selectedUnit : null;\n        model.IsHome = this.isHome;\n        model.DateStart = this.DateStart;\n        model.DateEnd = this.DateEnd;\n        model.Description = this.Description;\n        model.EmployerId = this.employerId;\n\n        await this.$store.dispatch(\"AddListSotridnikTemporalyMo\", model);\n\n        //Обновить список\n        await this.refresh();\n      }\n      this.progress = false;\n    },\n    initialize() {\n      this.desserts = [\n        {\n          name: \"Frozen Yogurt\",\n          calories: 159,\n          fat: 6.0,\n          carbs: 24,\n          protein: 4.0\n        },\n        {\n          name: \"Ice cream sandwich\",\n          calories: 237,\n          fat: 9.0,\n          carbs: 37,\n          protein: 4.3\n        },\n        {\n          name: \"Eclair\",\n          calories: 262,\n          fat: 16.0,\n          carbs: 23,\n          protein: 6.0\n        },\n        {\n          name: \"Cupcake\",\n          calories: 305,\n          fat: 3.7,\n          carbs: 67,\n          protein: 4.3\n        },\n        {\n          name: \"Gingerbread\",\n          calories: 356,\n          fat: 16.0,\n          carbs: 49,\n          protein: 3.9\n        },\n        {\n          name: \"Jelly bean\",\n          calories: 375,\n          fat: 0.0,\n          carbs: 94,\n          protein: 0.0\n        },\n        {\n          name: \"Lollipop\",\n          calories: 392,\n          fat: 0.2,\n          carbs: 98,\n          protein: 0\n        },\n        {\n          name: \"Honeycomb\",\n          calories: 408,\n          fat: 3.2,\n          carbs: 87,\n          protein: 6.5\n        },\n        {\n          name: \"Donut\",\n          calories: 452,\n          fat: 25.0,\n          carbs: 51,\n          protein: 4.9\n        },\n        {\n          name: \"KitKat\",\n          calories: 518,\n          fat: 26.0,\n          carbs: 65,\n          protein: 7\n        }\n      ];\n    },\n\n    editItem(item) {\n      this.editedIndex = this.desserts.indexOf(item);\n      this.editedItem = Object.assign({}, item);\n      this.dialog = true;\n    },\n\n    deleteItem(item) {\n      const index = this.desserts.indexOf(item);\n      confirm(\"Are you sure you want to delete this item?\") &&\n        this.desserts.splice(index, 1);\n    },\n\n    close() {\n      this.dialog = false;\n      setTimeout(() => {\n        this.editedItem = Object.assign({}, this.defaultItem);\n        this.editedIndex = -1;\n      }, 300);\n    },\n\n    save() {\n      if (this.editedIndex > -1) {\n        Object.assign(this.desserts[this.editedIndex], this.editedItem);\n      } else {\n        this.desserts.push(this.editedItem);\n      }\n      this.close();\n    }\n  }\n};\n</script>"]}]}